//    public void buySell(){
//        System.out.println("\u001B[44m You have entered the market \u001B[0m");
//        for(Heroes hero: player.getHeroes()){
//            int heroChoice = GameFunctions.safeScanIntWithLimit(new Scanner(System.in), hero.getName() + " would you like to enter the store\n1. Yes\n2. No\n", 1, 2);
//            if(heroChoice == 2)
//                continue;
//            else {
//                do {
//                    int val = GameFunctions.safeScanIntWithLimit(new Scanner(System.in), "What would you like to do?\n1. Buy\n2. Sell\n3. Exit\n", 1, 3);
//                    if (val == 1) {
//                        int mchoice = GameFunctions.safeScanIntWithLimit(new Scanner(System.in), "What would you like to buy?\n0. Exit\n1. Armory\n2. Weapon\n3. Potion\n4. Spell\n", 0, 4);
//                        if (mchoice == 1) {
//                            do {
//                                market.displayArmory();
//                                int id = GameFunctions.safeScanIntWithLimit(new Scanner(System.in), "Please enter the Id of the item you want to buy\n0. Exit\n", 0, market.getArmory().armories.size());
//                                if (id != 0) {
//                                    id = id-1;
//                                    if (market.getArmory().armories.get(id).getReq_level() > hero.getLevel()) {
//                                        System.out.println("You cannot buy this item. it needs level " + market.getArmory().armories.get(id).getReq_level());
//                                    } else {
//                                        if (hero.getStarting_money() < market.getArmory().armories.get(id).getCost()) {
//                                            System.out.println("You don't have the balance to buy this item");
//                                        }
//                                        else if(hero.getArmories().contains(market.getArmory().armories.get(id))){
//                                            System.out.println("You already own this item");
//                                        }
//                                        else {
//                                            hero.setStarting_money(hero.getStarting_money() - market.getArmory().armories.get(id).getCost());
//                                            if(GameFunctions.safeScanIntWithLimit(new Scanner(System.in), "Would you like to equip this item?\n1. Yes\n2. No\n", 1, 2) == 1){
//                                                for(int i=0;i<hero.getArmories().size();i++){
//                                                    hero.getArmories().get(i).setEquip("No");
//                                                }
//                                                Armory item = market.getArmory().armories.get(id);
//                                                item.setEquip("Yes");
//                                                hero.getArmories().add(item);
//                                                hero.setIsEquipped(true);
//                                                hero.setCurArmory(item);
//                                            }
//                                            else{
//                                                hero.getArmories().add(market.getArmory().armories.get(id));
//                                            }
//                                            break;
//                                        }
//                                    }
//                                }
//                                else
//                                    break;
//                            }while (true);
//                            for(int i=0;i<hero.getArmories().size();i++){
//                                hero.getArmories().get(i).setId(i+1);
//                            }
//                        } else if (mchoice == 2) {
//                            do {
//                                market.displayWeaponry();
//                                int id = GameFunctions.safeScanIntWithLimit(new Scanner(System.in), "Please enter the Id of the item you want to buy\n0. Exit\n", 0, market.getWeaponry().weapons.size());
//                                if (id != 0) {
//                                    id = id-1;
//                                    if (market.getWeaponry().weapons.get(id).getLevel() > hero.getLevel()) {
//                                        System.out.println("You cannot buy this item. it needs level " + market.getWeaponry().weapons.get(id).getLevel());
//                                    } else {
//                                        if (hero.getStarting_money() < market.getWeaponry().weapons.get(id).getCost()) {
//                                            System.out.println("You don't have the balance to buy this item");
//                                        }
//                                        else if(hero.getWeapons().contains(market.getWeaponry().weapons.get(id))){
//                                            System.out.println("You already own this item");
//                                        }
//                                        else {
//                                            hero.setStarting_money(hero.getStarting_money() - market.getWeaponry().weapons.get(id).getCost());
//                                            if(GameFunctions.safeScanIntWithLimit(new Scanner(System.in), "Would you like to equip this item?\n1. Yes\n2. No\n", 1, 2) == 1){
//                                                for(Weaponry item: hero.getWeapons()){
//                                                    item.setEquip("No");
//                                                }
//                                                Weaponry item = market.getWeaponry().weapons.get(id);
//                                                item.setEquip("Yes");
//                                                hero.getWeapons().add(item);
//                                                hero.setIsEquipped(true);
//                                                hero.setCurWeapon(item);
//                                            }
//                                            else{
//                                                hero.getWeapons().add(market.getWeaponry().weapons.get(id));
//                                            }
//                                            break;
//                                        }
//                                    }
//                                }
//                                else
//                                    break;
//                            }while (true);
//                            for(int i=0;i<hero.getWeapons().size();i++){
//                                hero.getWeapons().get(i).setId(i+1);
//                            }
//                        } else if (mchoice == 3) {
//                            do {
//                                market.displayPotions();
//                                int id = GameFunctions.safeScanIntWithLimit(new Scanner(System.in), "Please enter the Id of the item you want to buy\n0. Exit\n", 0, market.getPotion().potions.size());
//                                if (id != 0) {
//                                    id = id-1;
//                                    if (market.getPotion().potions.get(id).getReq_level() > hero.getLevel()) {
//                                        System.out.println("You cannot buy this item. it needs level " + market.getPotion().potions.get(id).getReq_level());
//                                    } else {
//                                        if (hero.getStarting_money() < market.getPotion().potions.get(id).getCost()) {
//                                            System.out.println("You don't have the balance to buy this item");
//                                        }
//                                        else if(hero.getPotions().contains(market.getPotion().potions.get(id))){
//                                            System.out.println("You already own this item");
//                                        }
//                                        else {
//                                            hero.getPotions().add(market.getPotion().potions.get(id));
//                                            hero.setStarting_money(hero.getStarting_money() - market.getPotion().potions.get(id).getCost());
//                                            break;
//                                        }
//                                    }
//                                }
//                                else
//                                    break;
//                            }while (true);
//                            for(int i=0;i<hero.getPotions().size();i++){
//                                hero.getPotions().get(i).setId(i+1);
//                            }
//                        } else if (mchoice == 4) {
//                            int sp = GameFunctions.safeScanIntWithLimit(new Scanner(System.in), "Which spell would you like to buy?\n0. Exit\n1. Fire Spell\n2. Ice Spell\n3. Lightning Spell\n", 0, 3);
//                            if (sp == 1) {
//                                do {
//                                    market.displayFireSpells();
//                                    int id = GameFunctions.safeScanIntWithLimit(new Scanner(System.in), "Please enter the Id of the item you want to buy\n0. Exit\n", 0, market.getFireSpell().fireSpells.size());
//                                    if (id != 0) {
//                                        id = id-1;
//                                        if (market.getFireSpell().fireSpells.get(id).getReq_level() > hero.getLevel()) {
//                                            System.out.println("You cannot buy this item. it needs level " + market.getFireSpell().fireSpells.get(id).getReq_level());
//                                        } else {
//                                            if (hero.getStarting_money() < market.getFireSpell().fireSpells.get(id).getCost()) {
//                                                System.out.println("You don't have the balance to buy this item");
//                                            }
//                                            else if(hero.getSpells().contains(market.getFireSpell().fireSpells.get(id))){
//                                                System.out.println("You already own this item");
//                                            }
//                                            else {
//                                                hero.getSpells().add(market.getFireSpell().fireSpells.get(id));
//                                                hero.setStarting_money(hero.getStarting_money() - market.getFireSpell().fireSpells.get(id).getCost());
//                                                break;
//                                            }
//                                        }
//                                    }
//                                    else
//                                        break;
//                                }while (true);
//                            } else if (sp == 2) {
//                                do {
//                                    market.displayIceSpells();
//                                    int id = GameFunctions.safeScanIntWithLimit(new Scanner(System.in), "Please enter the Id of the item you want to buy\n0. Exit\n", 0, market.getIceSpell().iceSpells.size());
//                                    if (id != 0) {
//                                        id = id-1;
//                                        if (market.getIceSpell().iceSpells.get(id).getReq_level() > hero.getLevel()) {
//                                            System.out.println("You cannot buy this item. it needs level " + market.getIceSpell().iceSpells.get(id).getReq_level());
//                                        } else {
//                                            if (hero.getStarting_money() < market.getIceSpell().iceSpells.get(id).getCost()) {
//                                                System.out.println("You don't have the balance to buy this item");
//                                            }
//                                            else if(hero.getSpells().contains(market.getIceSpell().iceSpells.get(id))){
//                                                System.out.println("You already own this item");
//                                            }
//                                            else {
//                                                hero.getSpells().add(market.getIceSpell().iceSpells.get(id));
//                                                hero.setStarting_money(hero.getStarting_money() - market.getIceSpell().iceSpells.get(id).getCost());
//                                                break;
//                                            }
//                                        }
//                                    }
//                                    else
//                                        break;
//                                }while (true);
//                            } else if (sp == 3) {
//                                do {
//                                    market.displayLightningSpells();
//                                    int id = GameFunctions.safeScanIntWithLimit(new Scanner(System.in), "Please enter the Id of the item you want to buy\n0. Exit\n", 0, market.getLightningSpell().lightningSpells.size());
//                                    if (id != 0) {
//                                        id = id-1;
//                                        if (market.getLightningSpell().lightningSpells.get(id).getReq_level() > hero.getLevel()) {
//                                            System.out.println("You cannot buy this item. it needs level " + market.getLightningSpell().lightningSpells.get(id).getReq_level());
//                                        } else {
//                                            if (hero.getStarting_money() < market.getLightningSpell().lightningSpells.get(id).getCost()) {
//                                                System.out.println("You don't have the balance to buy this item");
//                                            }
//                                            else if(hero.getSpells().contains(market.getLightningSpell().lightningSpells.get(id))){
//                                                System.out.println("You already own this item");
//                                            }
//                                            else {
//                                                hero.getSpells().add(market.getLightningSpell().lightningSpells.get(id));
//                                                hero.setStarting_money(hero.getStarting_money() - market.getLightningSpell().lightningSpells.get(id).getCost());
//                                                break;
//                                            }
//                                        }
//                                    }
//                                    else
//                                        break;
//                                }while (true);
//                            }
//                            for(int i=0;i<hero.getSpells().size();i++){
//                                hero.getSpells().get(i).setId(i+1);
//                            }
//                        }
//                        System.out.println("\u001B[36m " + hero.getName() + " Inventory \u001b[0m");
//                        hero.showInventory();
//                        System.out.println(hero.getName() + "Info");
//                        Display.displayHeroes(player.getHeroes());
//
//                    } else if (val == 2) {
//                        hero.showInventory();
//                        int mchoice = GameFunctions.safeScanIntWithLimit(new Scanner(System.in), "What would you like to sell?\n0. Exit\n1. Armory\n2. Weapon\n3. Potion\n4. Spell\n", 0, 4);
//                        if(mchoice == 1){
//                            if(hero.getArmories().size() == 0){
//                                System.out.println("You don't own any armories to sell");
//                            }
//                            else {
//                                hero.showArmories();
//                                int id = GameFunctions.safeScanIntWithLimit(new Scanner(System.in), "Please enter the id of item you want to sell\n0. Exit\n", 0, hero.getArmories().size());
//                                if(id != 0) {
//                                    id = id - 1;
//                                    hero.setStarting_money(hero.getStarting_money() + (hero.getArmories().get(id).getCost() / 2));
//                                    hero.getArmories().remove(id);
//                                }
//                            }
//                        }
//                        else if(mchoice == 2){
//                            if(hero.getWeapons().size() == 0){
//                                System.out.println("You don't own any weapons to sell");
//                            }
//                            else {
//                                hero.showWeapons();
//                                int id = GameFunctions.safeScanIntWithLimit(new Scanner(System.in), "Please enter the id of item you want to sell\n0. Exit\n", 0, hero.getWeapons().size());
//                                if(id != 0) {
//                                    id = id - 1;
//                                    hero.setStarting_money(hero.getStarting_money() + (hero.getWeapons().get(id).getCost() / 2));
//                                    hero.getWeapons().remove(id);
//                                }
//                            }
//                        }
//                        else if(mchoice == 3){
//                            if(hero.getPotions().size() == 0){
//                                System.out.println("You don't own any potions to sell");
//                            }
//                            else {
//                                hero.showPotions();
//                                int id = GameFunctions.safeScanIntWithLimit(new Scanner(System.in), "Please enter the id of item you want to sell\n0. Exit\n", 0, hero.getPotions().size());
//                                if(id != 0) {
//                                    id = id - 1;
//                                    hero.setStarting_money(hero.getStarting_money() + (hero.getPotions().get(id).getCost() / 2));
//                                    hero.getPotions().remove(id);
//                                }
//                            }
//                        }
//                        else if(mchoice == 4){
//                            if(hero.getSpells().size() == 0){
//                                System.out.println("You don't own any spells to sell");
//                            }
//                            else {
//                                hero.showSpells();
//                                int id = GameFunctions.safeScanIntWithLimit(new Scanner(System.in), "Please enter the id of item you want to sell\n0. Exit\n", 0, hero.getSpells().size());
//                                if(id != 0) {
//                                    id = id - 1;
//                                    hero.setStarting_money(hero.getStarting_money() + (hero.getSpells().get(id).getCost() / 2));
//                                    hero.getSpells().remove(id);
//                                }
//                            }
//                        }
//                        System.out.println("\u001B[36m " + hero.getName() + " Inventory \u001b[0m");
//                        hero.showInventory();
//                        System.out.println(hero.getName() + "Info");
//                        Display.displayHeroes(player.getHeroes());
//                    }
//                    if(GameFunctions.safeScanIntWithLimit(new Scanner(System.in), "Would you like to buy or sell any other item?\n1. Yes\n2. No\n", 1, 2) == 2){
//                        System.out.println(hero.getName() + " You have left the market");
//                        break;
//                    }
//                } while (true);
//            }
//        }
//    }
